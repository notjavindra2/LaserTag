local Version = "1.6.31"
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/download/" .. Version .. "/main.lua"))()
local Window = WindUI:CreateWindow({Title="LaserTag", Size=UDim2.new(0,500,0,400), Theme="Dark"})

-- Tabs
local MainTab = Window:Tab({Title="Main", Icon="house"})
local ESPTab = Window:Tab({Title="ESP", Icon="eye"})
local MiscTab = Window:Tab({Title="Misc", Icon="settings"})

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Variables
local WalkSpeedValue = 22
local AimbotEnabled = false
local AutoShootEnabled = false
local ESPTeamEnabled = false
local ESPEnemyEnabled = false
local AutoHideFromDeathEnabled = false
local KillLowestEnabled = false
local EquippedWeapon = nil
local SafeSpot = CFrame.new(-113.013, 105.444, 67.366)
local IsHiding = false
local LastPos

-- Helpers
local function getTeam(plr)
	return plr.Team and plr.Team.Name or nil
end

local function isAlive(plr)
	local hum = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid")
	return hum and hum.Health > 0
end

local function isVisible(target)
	local origin = Camera.CFrame.Position
	local ray = Ray.new(origin, (target.Position - origin))
	local hitPart = workspace:FindPartOnRayWithIgnoreList(ray, {LocalPlayer.Character})
	return hitPart == nil or hitPart:IsDescendantOf(target.Parent)
end

local function getEquippedWeapon()
	local char = LocalPlayer.Character
	if not char then return nil end
	local backpack = LocalPlayer:FindFirstChildOfClass("Backpack")
	local blasterFolder = ReplicatedStorage:FindFirstChild("Blaster")
	if not blasterFolder or not blasterFolder:FindFirstChild("ViewModels") then return nil end

	local weaponNames = {}
	for _, model in ipairs(blasterFolder.ViewModels:GetChildren()) do
		table.insert(weaponNames, model.Name)
	end

	for _, tool in ipairs(char:GetChildren()) do
		if tool:IsA("Tool") and table.find(weaponNames, tool.Name) then
			return tool
		end
	end
	for _, tool in ipairs(backpack:GetChildren()) do
		if tool:IsA("Tool") and table.find(weaponNames, tool.Name) then
			return tool
		end
	end
	return nil
end

local function getEnemies()
	local myTeam = getTeam(LocalPlayer)
	local enemies = {}
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and isAlive(plr) and plr.Character then
			local enemyTeam = getTeam(plr)
			if enemyTeam and enemyTeam ~= myTeam then
				table.insert(enemies, plr)
			end
		end
	end
	return enemies
end

local function getNearestEnemy()
	local nearest, dist
	for _, plr in ipairs(getEnemies()) do
		local head = plr.Character:FindFirstChild("Head")
		if head and isVisible(head) then
			local d = (Camera.CFrame.Position - head.Position).Magnitude
			if not nearest or d < dist then
				nearest, dist = head, d
			end
		end
	end
	return nearest
end

local function getLowestEnemy()
	local lowest, lowestHp
	for _, plr in ipairs(getEnemies()) do
		local hum = plr.Character:FindFirstChildOfClass("Humanoid")
		if hum and isVisible(plr.Character:FindFirstChild("Head")) then
			if not lowest or hum.Health < lowestHp then
				lowest, lowestHp = plr, hum.Health
			end
		end
	end
	return lowest and lowest.Character and lowest.Character:FindFirstChild("Head") or nil
end

-- ESP
local function createESP(character, color)
	if not character or character:FindFirstChild("LaserTagESP") then return end
	local h = Instance.new("Highlight")
	h.Name = "LaserTagESP"
	h.Adornee = character
	h.FillColor = color
	h.FillTransparency = 0.5
	h.OutlineColor = Color3.new(0,0,0)
	h.OutlineTransparency = 0
	h.Parent = character
end

local function removeESP(character)
	local h = character and character:FindFirstChild("LaserTagESP")
	if h then h:Destroy() end
end

local function updateESP()
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and plr.Character then
			removeESP(plr.Character)
			local myTeam = getTeam(LocalPlayer)
			local enemyTeam = getTeam(plr)
			if myTeam and enemyTeam then
				if enemyTeam == myTeam and ESPTeamEnabled then
					createESP(plr.Character, Color3.fromRGB(0, 255, 0))
				elseif enemyTeam ~= myTeam and ESPEnemyEnabled then
					createESP(plr.Character, Color3.fromRGB(255, 0, 0))
				end
			end
		end
	end
end

Players.PlayerAdded:Connect(function(p)
	p.CharacterAdded:Connect(function()
		task.wait(1)
		updateESP()
	end)
end)

Players.PlayerRemoving:Connect(function(p)
	if p.Character then removeESP(p.Character) end
end)

RunService.RenderStepped:Connect(function()
	if ESPTeamEnabled or ESPEnemyEnabled then
		updateESP()
	end
end)

-- MAIN TAB
MainTab:Input({
	Title="WalkSpeed",
	Value=tostring(WalkSpeedValue),
	Type="Input",
	Placeholder="Enter speed...",
	Callback=function(input)
		local val = tonumber(input)
		if val then WalkSpeedValue = val end
	end
})

MainTab:Toggle({
	Title="Aimbot",
	Desc="Aim at nearest enemy",
	Type="Checkbox",
	Default=false,
	Callback=function(state)
		AimbotEnabled = state
	end
})

MainTab:Toggle({
	Title="Auto Shoot",
	Desc="Shoot when aiming",
	Type="Checkbox",
	Default=false,
	Callback=function(state)
		AutoShootEnabled = state
	end
})

MainTab:Toggle({
	Title="Auto Hide From Death",
	Desc="Teleports to safe spot when low health",
	Type="Checkbox",
	Default=false,
	Callback=function(state)
		AutoHideFromDeathEnabled = state
	end
})

MainTab:Toggle({
	Title="Kill Lowest",
	Desc="Kills lowest HP enemy first (requires AutoShoot)",
	Type="Checkbox",
	Default=false,
	Callback=function(state)
		KillLowestEnabled = state
	end
})

-- AUTO HIDE LOOP
RunService.Heartbeat:Connect(function()
	if AutoHideFromDeathEnabled and LocalPlayer.Character then
		local hum = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if hum and hum.Health <= 10 and not IsHiding then
			IsHiding = true
			LastPos = LocalPlayer.Character.HumanoidRootPart.CFrame
			LocalPlayer.Character.HumanoidRootPart.CFrame = SafeSpot

			local box = Instance.new("Part")
			box.Anchored = true
			box.Size = Vector3.new(10,10,10)
			box.CFrame = SafeSpot
			box.Transparency = 0.8
			box.CanCollide = true
			box.Color = Color3.fromRGB(255, 0, 0)
			box.Parent = workspace

			repeat task.wait(1) until hum.Health >= hum.MaxHealth - 1
			box:Destroy()
			LocalPlayer.Character.HumanoidRootPart.CFrame = LastPos
			IsHiding = false
		end
	end
end)

-- AIMBOT + AUTOSHOOT
RunService.RenderStepped:Connect(function()
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		LocalPlayer.Character.Humanoid.WalkSpeed = WalkSpeedValue
	end

	if not AimbotEnabled then return end
	if UserInputService.MouseBehavior == Enum.MouseBehavior.Default then return end

	EquippedWeapon = getEquippedWeapon()
	if not EquippedWeapon then return end

	local target
	if KillLowestEnabled and AutoShootEnabled then
		target = getLowestEnemy()
	else
		target = getNearestEnemy()
	end
	if not target then return end

	Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Position)
	if AutoShootEnabled and target and isVisible(target) then
		VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
		VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
	end
end)

-- ESP TAB
ESPTab:Toggle({
	Title="Team ESP",
	Type="Checkbox",
	Default=false,
	Callback=function(state)
		ESPTeamEnabled = state
		updateESP()
	end
})

ESPTab:Toggle({
	Title="Enemy ESP",
	Type="Checkbox",
	Default=false,
	Callback=function(state)
		ESPEnemyEnabled = state
		updateESP()
	end
})
