local Version = "1.6.31"
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/download/" .. Version .. "/main.lua"))()
local Window = WindUI:CreateWindow({Title="LaserTag", Size=UDim2.new(0,500,0,400), Theme="Dark"})

-- Tabs
local MainTab = Window:Tab({Title="Main", Icon="house"})
local ESPTab = Window:Tab({Title="ESP", Icon="eye"})
local MiscTab = Window:Tab({Title="Misc", Icon="settings"})

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Variables
local WalkSpeedValue = 22
local AimbotEnabled = false
local AutoShootEnabled = false
local ESPEnabled = false
local EquippedWeapon = nil

-- Helpers
local function getTeam(plr)
	if plr.Team and plr.Team.Name then
		return plr.Team.Name
	end
	return nil
end

local function isAlive(plr)
	local hum = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid")
	return hum and hum.Health > 0
end

local function isVisible(target)
	local origin = Camera.CFrame.Position
	local direction = (target.Position - origin)
	local ray = Ray.new(origin, direction)
	local hitPart = workspace:FindPartOnRayWithIgnoreList(ray, {LocalPlayer.Character})
	return hitPart == nil or hitPart:IsDescendantOf(target.Parent)
end

local function getNearestEnemy()
	local myTeam = getTeam(LocalPlayer)
	if not myTeam then return nil end
	local nearest, nearestDist
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and isAlive(plr) then
			local enemyTeam = getTeam(plr)
			if enemyTeam and enemyTeam ~= myTeam and plr.Character and plr.Character:FindFirstChild("Head") then
				local head = plr.Character.Head
				local dist = (Camera.CFrame.Position - head.Position).Magnitude
				if (not nearest or dist < nearestDist) and isVisible(head) then
					nearest, nearestDist = head, dist
				end
			end
		end
	end
	return nearest
end

local function getEquippedWeapon()
	local character = LocalPlayer.Character
	if not character then return nil end
	local backpack = LocalPlayer:FindFirstChildOfClass("Backpack")
	local blasterFolder = ReplicatedStorage:FindFirstChild("Blaster")
	if not blasterFolder or not blasterFolder:FindFirstChild("ViewModels") then return nil end

	local weaponNames = {}
	for _, model in ipairs(blasterFolder.ViewModels:GetChildren()) do
		table.insert(weaponNames, model.Name)
	end

	for _, tool in ipairs(character:GetChildren()) do
		if tool:IsA("Tool") and table.find(weaponNames, tool.Name) then
			return tool
		end
	end
	for _, tool in ipairs(backpack:GetChildren()) do
		if tool:IsA("Tool") and table.find(weaponNames, tool.Name) then
			return tool
		end
	end
	return nil
end

-- MAIN TAB
MainTab:Input({
	Title="WalkSpeed",
	Desc="Set your walking speed",
	Value=tostring(WalkSpeedValue),
	Type="Input",
	Placeholder="Enter speed...",
	Callback=function(input)
		local val = tonumber(input)
		if val then
			WalkSpeedValue = val
		end
	end
})

MainTab:Toggle({
	Title="Aimbot",
	Desc="Automatically aim at enemies",
	Type="Checkbox",
	Default=false,
	Callback=function(state)
		AimbotEnabled = state
	end
})

MainTab:Toggle({
	Title="Auto Shoot",
	Desc="Automatically shoot when aiming",
	Type="Checkbox",
	Default=false,
	Callback=function(state)
		AutoShootEnabled = state
	end
})

-- AIMBOT + AUTOSHOOT CORE LOOP
RunService.RenderStepped:Connect(function()
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		LocalPlayer.Character.Humanoid.WalkSpeed = WalkSpeedValue
	end

	if not AimbotEnabled then return end

	-- Check if Roblox menu is open (mouse free)
	if UserInputService.MouseBehavior == Enum.MouseBehavior.Default then
		return
	end

	-- Check if holding valid weapon
	EquippedWeapon = getEquippedWeapon()
	if not EquippedWeapon then
		return
	end

	local target = getNearestEnemy()
	if not target then return end

	Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Position)

	if AutoShootEnabled and target and isVisible(target) then
		VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
		VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
	end
end)

-- ESP
local function createESP(character, color)
	if not character or character:FindFirstChild("LaserTagESP") then return end
	local h = Instance.new("Highlight")
	h.Name = "LaserTagESP"
	h.Adornee = character
	h.FillColor = color
	h.FillTransparency = 0.5
	h.OutlineColor = Color3.new(0,0,0)
	h.OutlineTransparency = 0
	h.Parent = character
end

local function removeESP(character)
	local h = character and character:FindFirstChild("LaserTagESP")
	if h then h:Destroy() end
end

local function updateESP()
	if not ESPEnabled then
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character then removeESP(plr.Character) end
		end
		return
	end

	local myTeam = getTeam(LocalPlayer)
	for _,plr in pairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and plr.Character then
			local enemyTeam = getTeam(plr)
			if myTeam == "Pink" then
				if enemyTeam == "Green" then
					createESP(plr.Character, Color3.fromRGB(255,0,0))
				else
					createESP(plr.Character, Color3.fromRGB(255,105,180))
				end
			elseif myTeam == "Green" then
				if enemyTeam == "Pink" then
					createESP(plr.Character, Color3.fromRGB(255,0,0))
				else
					createESP(plr.Character, Color3.fromRGB(0,255,0))
				end
			end
		end
	end
end

ESPTab:Toggle({
	Title="Enable ESP",
	Desc="Highlights players by team",
	Type="Checkbox",
	Default=false,
	Callback=function(state)
		ESPEnabled = state
		updateESP()
	end
})

Players.PlayerAdded:Connect(function(p)
	p.CharacterAdded:Connect(function()
		task.wait(1)
		updateESP()
	end)
end)

Players.PlayerRemoving:Connect(function(p)
	if p.Character then removeESP(p.Character) end
end)

RunService.RenderStepped:Connect(function()
	if ESPEnabled then updateESP() end
end)
